---
kind: pipeline
type: docker
name: frontend_dev_deploy
trigger:
  branch:
    - feat/rosat_setup_frontend_cicd
  event:
    - pull_request

platform:
  os: linux
  arch: amd64

volumes:
  - name: dockersock
    host:
      path: /var/run/docker.sock
  - name: whitelist
    host:
      path: /etc/docker/daemon.json
  - name: toolkit
    host:
      path: /data/drone_data

steps:
  - name: verify pull request
    pull: if-not-exists
    image: alpine/git
    volumes:
      - name: toolkit
        path: /data/drone_data
    commands:
      - /data/drone_data/debio_toolkit -approval -repo=debionetwork/debio-frontend -id=${DRONE_PULL_REQUEST}
    when:
      branch:
        - development

  - name: build - devel
    pull: if-not-exists
    image: plugins/ansible:1
    volumes:
      - name: toolkit
        path: /data/drone_data
      - name: whitelist
        path: /etc/docker/daemon.json
      - name: dockersock
        path: /var/run/docker.sock
    settings:
      playbook: ansible/playbook.yml
      galaxy: ansible/requirements.yml
      inventory: ansible/inventory
      syntax_check: true
    when:
      branch:
        - feat/rosat_setup_frontend_cicd

  - name: deploy
    pull: if-not-exists
    image: docker
    volumes:
      - name: whitelist
        path: /etc/docker/daemon.json
      - name: dockersock
        path: /var/run/docker.sock
    commands:
      - echo "build debio_frontend_service image ...."
      - docker build -t debio_frontend_service .
      - docker tag debio_frontend_service hub.theapps.dev/debio_frontend_service:latest
      - docker push hub.theapps.dev/debio_frontend_service:latest
    when:
      event:
        - push
      branch:
        - staging

---
kind: secret
name: devel_host
get:
  path: drone_development/deploy_target
  name: devel_host
---
kind: secret
name: devel_key
get:
  path: drone_development/deploy_target
  name: devel_key
---
kind: secret
name: devel_uname
get:
  path: drone_development/deploy_target
  name: devel_uname
---
kind: secret
name: stg_host
get:
  path: drone_staging/deploy_target
  name: stg_host
---
kind: secret
name: stg_key
get:
  path: drone_staging/deploy_target
  name: stg_key
---
kind: secret
name: stg_uname
get:
  path: drone_staging/deploy_target
  name: stg_uname
---
kind: secret
name: discord_id
get:
  path: drone_common_config/webhook
  name: discord_id
---
kind: secret
name: discord_token
get:
  path: drone_common_config/webhook
  name: discord_token